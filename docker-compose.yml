services:
  localstack:
    image: localstack/localstack:3
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=cognito,cloudformation,sts,iam
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./infra:/infra

  cdk:
    build:
      context: ./infra
      dockerfile: Dockerfile.dev
    depends_on:
      - localstack
    environment:
      - CDK_DEPLOY_REGION=us-east-1
      - CDK_DEPLOY_ACCOUNT=000000000000
    command: >
      sh -c "npx cdk bootstrap --context env=local &&
             npx cdk deploy --require-approval never --context env=local"

  mongo:
    image: mongo:7
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: example
    depends_on:
      - mongo

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: tamber-api-dev
    ports:
      - "8080:8080"
    volumes:
      - ./api:/app  # required for live reload
    depends_on:
      - mongo

  desktop:
    build:
      context: ./desktop
      dockerfile: Dockerfile.dev  # you may need to create this if it doesn't exist
    container_name: tamber-desktop
    ports:
      - "3000:3000"
    environment:
      - API_BASE_URL=http://api:8080
    depends_on:
      - api


volumes:
  mongo-data:

